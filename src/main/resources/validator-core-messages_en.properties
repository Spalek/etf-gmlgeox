validator.core.validation.message-type.fatal=Fatal
validator.core.validation.message-type.error=Error
validator.core.validation.message-type.warning=Warning
validator.core.validation.message-type.notice=Notice

validator.core.validation.task-version.component=component: {0}
validator.core.validation.task-version.file=file: {0}
validator.core.validation.task-version.separator=,

validator.core.validation.file.type.error=The type of the XML file could not be determined: {0}
validator.core.validation.file.standard.error=The standard of the file could not be determined. Might be caused by wrong namespace. Known name spaces are: {0}

validator.core.validation.exception.file=File is missing or cannot be read.
validator.core.validation.exception=An exception occured during the validation process.
validator.core.validation.start=Validation started: {0}
validator.core.validation.end=Validation finished: {0}

validator.core.validation.encoding.assumed-encoding=Encoding used: {0}
validator.core.validation.encoding.missing-encoding=Encoding not specified in XML file. Default {0} encoding is assumed. It is recommended to specify encoding explicitly.
validator.core.validation.encoding.file-encoding-notsupported=Unsupported file encoding ({0}). Supported file encodings are: {2}
validator.core.validation.encoding.xml-encoding-notsupported=Unsupporte  XML encoding ({1}). Supported XML encodings are: {2}
validator.core.validation.encoding.encoding-conflict=Conflict between file ({0}) and XML encoding ({1}).
validator.core.validation.encoding.utf8.wrong-character=Incorrect UTF-8 character detected. Property: line {0}, column {1}, absolute position {2}, value: {3}, context: "{4}".

validator.core.validation.geometry.problem-location-text=Problem: ({0} {1})
validator.core.validation.geometry.coordinates-text-simple=Start: ({0} {1}), end: ({2} {3})
validator.core.validation.geometry.coordinates-text=Start: ({0} {1}), end: ({2} {3}), problem: ({4} {5})
validator.core.validation.geometry.unknown-exception=Unknown error. Possibly no coordinates available.
validator.core.validation.geometry.coordinates-position=Element {0} at position {1} within element {2} (gmlId: {3})
validator.core.validation.geometry.valid=The file is geometrically valid
validator.core.validation.geometry.no-srsname=No srsName specified.
validator.core.validation.geometry.no-gml=No known GML version found (found namespace: {0}).
validator.core.validation.geometry.gmlversion=Detected GML standard version: GML{0}.

validator.core.validation.geometry.problem-location=({0} {1})
validator.core.validation.geometry.curvediscontinuity=Invalid curve. Curve not continuous within element {1}, (gmlId: {0} with coordinates: {2}...). Starting point {3} of segment {4} is not the same as end point {5} of the previous element.
#validator.core.validation.geometry.curvepointduplication=Invalid curve. Duplicate coordinates within element {1}, (gmlId: {0}). Problem: ({2} {3})
validator.core.validation.geometry.curveselfintersection=Invalid curve. Self-intersecting curve within element {1}, (gmlId: {0} with coordinates: {2}...)
validator.core.validation.geometry.unsupported=The geometry contains an unsupported element, within element {1}, (gmlId: {0}). Details: {2}
validator.core.validation.geometry.exteriorRingCW=Invalid polygon. Outer ring of polygon is clockwise within element {1}, (gmlId: {0} with coordinates: {2}...)
validator.core.validation.geometry.interiorRingCCW=Invalid polygon. Inner ring of polygon is counterclockwise within element {1}, (gmlId: {0} with coordinates: {2}...)
validator.core.validation.geometry.interiorringintersectsexterior=Invalid polygon. Inner ring intersects outer ring within element {1}, (gmlId: {0} with coordinates: {2}...)
validator.core.validation.geometry.interiorringoutsideexterior=Invalid polygon. Inner ring is defined outside of outer ring within element {1}, (gmlId: {0} with coordinates: {2}...)
#validator.core.validation.geometry.interiorringtouchesexterior=Invalid polygon. Inner ring touches outer ring within element {1}, (gmlId: {0} with coordinates: {2}...)
validator.core.validation.geometry.interiorringsintersect=Invalid polyoon. Multiple inner rings intersect within element {1}, (gmlId: {0} with coordinates: {2}...)
#validator.core.validation.geometry.interiorringstouch=Invalid polygon. Multiple inner rings touch within element {1}, (gmlId: {0} with coordinates: {2}...)
validator.core.validation.geometry.interiorringswithin=Invalid polygon. Nested inner rings within element {1}, (gmlId: {0} with coordinates: {2}...)
validator.core.validation.geometry.ringnotclosed=Invalid polygon. Ring is not closed within element {1}, (gmlId: {0} with coordinates: {2}...). Starting point {3} van not the same as end point {4}.
#validator.core.validation.geometry.ringselfintersection=Invalid polygon. Self-intersecting ring within element {1}, (gmlId: {0} with coordinates: {2}...)
validator.core.validation.geometry.unexpected=Unexpected error during geometric validation.


validator.core.validation.schematron.unknown-error=Unknown error during rule validation
validator.core.validation.schematron.valid=The file is valid according to rules in {1}

validator.core.validation.schema.location-text=[Line: {0}, column.: {1}]
validator.core.validation.schema.valid=The file is according to schema in {1}

validator.core.validation.filename.filename-invalid=Filename {0} is not valid and does not conform the expected filename {1} (<plan identification>.gml)
validator.core.validation.filename.filename-valid=Filename {0} is valid
validator.core.validation.filename.planid-not-found=No planId found based on {0}



validator.core.validation.nsversion.version-invalid=Can not determine version for file {0}, none of the following namespaces is found: {1}
validator.core.validation.nsversion.version-no-validation=No configured validation for file with version {0}

validator.core.validation.signature.missing= No signature in file {0} found
validator.core.validation.signature.valid=The signature in file {0} is incorrect
validator.core.validation.signature.valid-with-waivers=The signature in file {0} is correct, but the certificate not
validator.core.validation.keyinfo.missing=No information about the used key in file {0}
validator.core.validation.signature.resource-error=An error is encountered while searching for the resource, possibly due to wrong or missing URI: {0}

validator.core.validation.signature.novalid-signature=The signature in file {0} is not correct
validator.core.validation.signature.novalid-digest=The hash for file {0} is not correct
validator.core.validation.signature.novalid-selfreference=The signature in fiel {0} referec to itself
validator.core.validation.signature.unknown-error=Unknown error during authentication

validator.core.validation.signature.certificate-principal=The file is signed by {0}
validator.core.validation.signature.certificate-none=No certificate in the signature found
validator.core.validation.signature.certificate-issuer-unknown=Unknown issuer of the certificate ({0}). Issuer: {1}
validator.core.validation.signature.root-certificate-unknown=The root certificate ({0}) is unknown
validator.core.validation.signature.fake-root-certificate=The root certificate {0} is possibly a fake certificate.
validator.core.validation.signature.no-signing-certificates=No certificates found for signature in file {0}.
validator.core.validation.signature.cannot-determine-signing-certificate=The signed certificate can not be determined for file {0}.
validator.core.validation.signature.cannot-determine-certificate-order=The order of certificates cannot be determined. There are more certificates found than the longest possible chain of coupled certificates. Found certificates: {0}
validator.core.validation.signature.certificate-expired=The certificate({0}) is expired
validator.core.validation.signature.root-certificate-expired=The root certificate ({0}) is expired
validator.core.validation.signature.certificate-not-yet-valid=The certificate ({0}) is not yet valid
validator.core.validation.signature.certificate-issuer-may-not-sign=The issuer of the certificate ({0}) may not sign the certificate
validator.core.validation.signature.certificate-may-not-sign-objects=The certificate ({0}) may not sign objects
validator.core.validation.signature.certificate-signature-invalid=The signature for certificate ({0}) has no valid signature
validator.core.validation.signature.certificate-key-invalid=The public-key of issuer does not agree with certificate ({0})
validator.core.validation.signature.certificate-encoding-invalid=The certificate ({0}) has an invalid encoding
validator.core.validation.signature.certificate-algorithm-invalid=The certificate ({0}) is signed with an invalid algorithm
validator.core.validation.signature.certificate-revoked-uncertain=Withdrawal of certificate ({0}) is uncurtain due to problems with downloading or reading of CRL files
validator.core.validation.signature.certificate-revoked=The certificate ({0}) is withdrawn 
validator.core.validation.signature.certificate-ocsp-revoked=The certificate ({0}) is not valid conform OCSP
validator.core.validation.signature.certificate-ocsp-uncertain=Legitimacy of certificate ({0}) uncertain due to technical problems with OCSP validation
validator.core.validation.signature.crl-invalid=The CRL file for certificate with issuer {0} is invalid or could not be read. CRL address = {1}. Details: {2}
validator.core.validation.signature.crl-downloaded-fail=The CRL file for certificate with issuer {0} can not be downloaded from address {1}
validator.core.validation.signature.ocsp-call-error=The OCSP request for certificate issuer {0} is not successfull. OCSP address= {1}. Details: {2}
validator.core.validation.signature.ocsp-revoked-certificate=OCSP revokes certificate {0}. OCSP address: {1}

validator.core.validation.reference.no-planid=No planId could be derived from plan
validator.core.validation.reference.no-plan=No plan found in manifest with planId: {0}
validator.core.validation.reference.wrong-imro=Plan element in Manifest wiht id {0} doesnot refer to IMRO file: {1} but to file: {2}
validator.core.validation.reference.geleideformulier-absent=No valied request form found. Therefore, no Reference validation of parameters of request form.
validator.core.validation.reference.geleideformulier-manifest-partsnum-different=Parts of the request form (number: {0}) are not identical to parts of manifest (number: {1})
validator.core.validation.reference.geleideformulier-field-empty={0} is empty or non-existant in request form
validator.core.validation.reference.manifest-field-empty={0} is empty or non-existant in manifest
validator.core.validation.reference.geleideformulier-manifest-field-different={0} in the request form ({1}) is not identical to {0} in manifest ({2})
validator.core.validation.reference.plan-field-empty={0} is empty or non-existant in plan
validator.core.validation.reference.plan-manifest-field-different={0} in plan ({1}) is not identical to {0} in manifest ({2})
validator.core.validation.reference.plan-manifest-filename-absent=Filename in plan does not occur in manifest: {0}
validator.core.validation.reference.references-valid=De references are invalid

validator.core.validation.supported-plan-types.planid-not-found=No planId could be derived from file {0}
validator.core.validation.supported-plan-types.plan-type-not-supported=Plans with plan-type {0} are not supported
validator.core.validation.supported-plan-types.plan-type-supported=Plans with plan-type {0} are supported

validator.core.validation.illegal.content.detected=Illegal content detected: {0}
